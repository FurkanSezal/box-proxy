{
  "address": "0x844b8E887b1e2561Da375B48a73ec916972592cF",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "Deployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_creationCode",
          "type": "bytes"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "address",
          "name": "deployed",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_deployer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "getDeployedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0388839127919c8e5f3b493d590b7cee8f96d014c9e06c7c66c8ff0afc554f98",
  "receipt": {
    "to": null,
    "from": "0xEaC9eDFE37fA378E8795253d292e6393d29aBCa2",
    "contractAddress": "0x844b8E887b1e2561Da375B48a73ec916972592cF",
    "transactionIndex": 0,
    "gasUsed": "842529",
    "logsBloom": "0x
    "blockHash": "0x889ed2e72e0f282487787d111658ffb07f9ece98f8a50973b86cca651e9b0f27",
    "transactionHash": "0x0388839127919c8e5f3b493d590b7cee8f96d014c9e06c7c66c8ff0afc554f98",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 39609363,
        "transactionHash": "0x0388839127919c8e5f3b493d590b7cee8f96d014c9e06c7c66c8ff0afc554f98",
        "address": "0x844b8E887b1e2561Da375B48a73ec916972592cF",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000eac9edfe37fa378e8795253d292e6393d29abca2"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x889ed2e72e0f282487787d111658ffb07f9ece98f8a50973b86cca651e9b0f27"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 39609363,
        "transactionHash": "0x0388839127919c8e5f3b493d590b7cee8f96d014c9e06c7c66c8ff0afc554f98",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000eac9edfe37fa378e8795253d292e6393d29abca2",
          "0x00000000000000000000000057206c929f2ba00a7eb68f8b493c0318501f54f9"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000017f2348d1c0c8d000000000000000000000000000000000000000000000000007968dc8e2d251b000000000000000000000000000000000000000000000004b160712ad42b1bbf000000000000000000000000000000000000000000000000006176a80111188e000000000000000000000000000000000000000000000004b178635f6147284c",
        "logIndex": 1,
        "blockHash": "0x889ed2e72e0f282487787d111658ffb07f9ece98f8a50973b86cca651e9b0f27"
      }
    ],
    "blockNumber": 39609363,
    "cumulativeGasUsed": "842529",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3660582bb5001ae30aca00f5f4cbf226",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_creationCode\",\"type\":\"bytes\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployed\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"getDeployedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Create3Factory.sol\":\"Create3Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Create3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"solmate/src/utils/CREATE3.sol\\\";\\n\\ncontract Create3Factory is Ownable {\\n    event Deployed(address contractAddress);\\n\\n    function deploy(\\n        bytes32 _salt,\\n        bytes memory _creationCode\\n    ) external payable onlyOwner returns (address deployed) {\\n        bytes32 salt = keccak256(abi.encodePacked(msg.sender, _salt));\\n        deployed = CREATE3.deploy(salt, _creationCode, msg.value);\\n        emit Deployed(deployed);\\n    }\\n\\n    function getDeployedAddress(\\n        address _deployer,\\n        bytes32 _salt\\n    ) external view returns (address) {\\n        bytes32 salt = keccak256(abi.encodePacked(_deployer, _salt));\\n        return CREATE3.getDeployed(salt);\\n    }\\n}\\n\",\"keccak256\":\"0xed73b31f9de2a3c7acfc9906e99aa0ad37cde1546b0d9dbd6229e702a8d969fa\",\"license\":\"MIT\"},\"solmate/src/utils/Bytes32AddressLib.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Library for converting between addresses and bytes32 values.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/Bytes32AddressLib.sol)\\nlibrary Bytes32AddressLib {\\n    function fromLast20Bytes(bytes32 bytesValue) internal pure returns (address) {\\n        return address(uint160(uint256(bytesValue)));\\n    }\\n\\n    function fillLast12Bytes(address addressValue) internal pure returns (bytes32) {\\n        return bytes32(bytes20(addressValue));\\n    }\\n}\\n\",\"keccak256\":\"0xe709c9f2c6fb8bfe1158fa31967c0a2109844c52079fe4e327baec82fb87acb6\",\"license\":\"AGPL-3.0-only\"},\"solmate/src/utils/CREATE3.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\nimport {Bytes32AddressLib} from \\\"./Bytes32AddressLib.sol\\\";\\n\\n/// @notice Deploy to deterministic addresses without an initcode factor.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/CREATE3.sol)\\n/// @author Modified from 0xSequence (https://github.com/0xSequence/create3/blob/master/contracts/Create3.sol)\\nlibrary CREATE3 {\\n    using Bytes32AddressLib for bytes32;\\n\\n    //--------------------------------------------------------------------------------//\\n    // Opcode     | Opcode + Arguments    | Description      | Stack View             //\\n    //--------------------------------------------------------------------------------//\\n    // 0x36       |  0x36                 | CALLDATASIZE     | size                   //\\n    // 0x3d       |  0x3d                 | RETURNDATASIZE   | 0 size                 //\\n    // 0x3d       |  0x3d                 | RETURNDATASIZE   | 0 0 size               //\\n    // 0x37       |  0x37                 | CALLDATACOPY     |                        //\\n    // 0x36       |  0x36                 | CALLDATASIZE     | size                   //\\n    // 0x3d       |  0x3d                 | RETURNDATASIZE   | 0 size                 //\\n    // 0x34       |  0x34                 | CALLVALUE        | value 0 size           //\\n    // 0xf0       |  0xf0                 | CREATE           | newContract            //\\n    //--------------------------------------------------------------------------------//\\n    // Opcode     | Opcode + Arguments    | Description      | Stack View             //\\n    //--------------------------------------------------------------------------------//\\n    // 0x67       |  0x67XXXXXXXXXXXXXXXX | PUSH8 bytecode   | bytecode               //\\n    // 0x3d       |  0x3d                 | RETURNDATASIZE   | 0 bytecode             //\\n    // 0x52       |  0x52                 | MSTORE           |                        //\\n    // 0x60       |  0x6008               | PUSH1 08         | 8                      //\\n    // 0x60       |  0x6018               | PUSH1 18         | 24 8                   //\\n    // 0xf3       |  0xf3                 | RETURN           |                        //\\n    //--------------------------------------------------------------------------------//\\n    bytes internal constant PROXY_BYTECODE = hex\\\"67_36_3d_3d_37_36_3d_34_f0_3d_52_60_08_60_18_f3\\\";\\n\\n    bytes32 internal constant PROXY_BYTECODE_HASH = keccak256(PROXY_BYTECODE);\\n\\n    function deploy(\\n        bytes32 salt,\\n        bytes memory creationCode,\\n        uint256 value\\n    ) internal returns (address deployed) {\\n        bytes memory proxyChildBytecode = PROXY_BYTECODE;\\n\\n        address proxy;\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Deploy a new contract with our pre-made bytecode via CREATE2.\\n            // We start 32 bytes into the code to avoid copying the byte length.\\n            proxy := create2(0, add(proxyChildBytecode, 32), mload(proxyChildBytecode), salt)\\n        }\\n        require(proxy != address(0), \\\"DEPLOYMENT_FAILED\\\");\\n\\n        deployed = getDeployed(salt);\\n        (bool success, ) = proxy.call{value: value}(creationCode);\\n        require(success && deployed.code.length != 0, \\\"INITIALIZATION_FAILED\\\");\\n    }\\n\\n    function getDeployed(bytes32 salt) internal view returns (address) {\\n        address proxy = keccak256(\\n            abi.encodePacked(\\n                // Prefix:\\n                bytes1(0xFF),\\n                // Creator:\\n                address(this),\\n                // Salt:\\n                salt,\\n                // Bytecode hash:\\n                PROXY_BYTECODE_HASH\\n            )\\n        ).fromLast20Bytes();\\n\\n        return\\n            keccak256(\\n                abi.encodePacked(\\n                    // 0xd6 = 0xc0 (short RLP prefix) + 0x16 (length of: 0x94 ++ proxy ++ 0x01)\\n                    // 0x94 = 0x80 + 0x14 (0x14 = the length of an address, 20 bytes, in hex)\\n                    hex\\\"d6_94\\\",\\n                    proxy,\\n                    hex\\\"01\\\" // Nonce of the proxy contract (1)\\n                )\\n            ).fromLast20Bytes();\\n    }\\n}\\n\",\"keccak256\":\"0x1d4ea6d2353ed117d7704ddf7488fcd39edb2d575351f6c64efd313170d74367\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610dda8061010d6000396000f3fe60806040526004361061004a5760003560e01c80634e6553041461004f578063715018a61461008c5780638da5cb5b146100a3578063cdcb760a146100ce578063f2fde38b146100fe575b600080fd5b34801561005b57600080fd5b50610076600480360381019061007191906106f8565b610127565b6040516100839190610747565b60405180910390f35b34801561009857600080fd5b506100a1610167565b005b3480156100af57600080fd5b506100b861017b565b6040516100c59190610747565b60405180910390f35b6100e860048036038101906100e391906108a8565b6101a4565b6040516100f59190610747565b60405180910390f35b34801561010a57600080fd5b5061012560048036038101906101209190610904565b610226565b005b600080838360405160200161013d92919061099a565b60405160208183030381529060405280519060200120905061015e816102a9565b91505092915050565b61016f61035a565b61017960006103d8565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006101ae61035a565b600033846040516020016101c392919061099a565b6040516020818303038152906040528051906020012090506101e681843461049c565b91507ff40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e826040516102179190610747565b60405180910390a15092915050565b61022e61035a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361029d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029490610a49565b60405180910390fd5b6102a6816103d8565b50565b60008061032160ff60f81b30856040518060400160405280601081526020017f67363d3d37363d34f03d5260086018f300000000000000000000000000000000815250805190602001206040516020016103069493929190610ab6565b6040516020818303038152906040528051906020012061063b565b9050610352816040516020016103379190610ba7565b6040516020818303038152906040528051906020012061063b565b915050919050565b610362610648565b73ffffffffffffffffffffffffffffffffffffffff1661038061017b565b73ffffffffffffffffffffffffffffffffffffffff16146103d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cd90610c24565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000806040518060400160405280601081526020017f67363d3d37363d34f03d5260086018f30000000000000000000000000000000081525090506000858251602084016000f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054b90610c90565b60405180910390fd5b61055d866102a9565b925060008173ffffffffffffffffffffffffffffffffffffffff1685876040516105879190610d21565b60006040518083038185875af1925050503d80600081146105c4576040519150601f19603f3d011682016040523d82523d6000602084013e6105c9565b606091505b505090508080156105f2575060008473ffffffffffffffffffffffffffffffffffffffff163b14155b610631576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062890610d84565b60405180910390fd5b5050509392505050565b60008160001c9050919050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061068f82610664565b9050919050565b61069f81610684565b81146106aa57600080fd5b50565b6000813590506106bc81610696565b92915050565b6000819050919050565b6106d5816106c2565b81146106e057600080fd5b50565b6000813590506106f2816106cc565b92915050565b6000806040838503121561070f5761070e61065a565b5b600061071d858286016106ad565b925050602061072e858286016106e3565b9150509250929050565b61074181610684565b82525050565b600060208201905061075c6000830184610738565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107b58261076c565b810181811067ffffffffffffffff821117156107d4576107d361077d565b5b80604052505050565b60006107e7610650565b90506107f382826107ac565b919050565b600067ffffffffffffffff8211156108135761081261077d565b5b61081c8261076c565b9050602081019050919050565b82818337600083830152505050565b600061084b610846846107f8565b6107dd565b90508281526020810184848401111561086757610866610767565b5b610872848285610829565b509392505050565b600082601f83011261088f5761088e610762565b5b813561089f848260208601610838565b91505092915050565b600080604083850312156108bf576108be61065a565b5b60006108cd858286016106e3565b925050602083013567ffffffffffffffff8111156108ee576108ed61065f565b5b6108fa8582860161087a565b9150509250929050565b60006020828403121561091a5761091961065a565b5b6000610928848285016106ad565b91505092915050565b60008160601b9050919050565b600061094982610931565b9050919050565b600061095b8261093e565b9050919050565b61097361096e82610684565b610950565b82525050565b6000819050919050565b61099461098f826106c2565b610979565b82525050565b60006109a68285610962565b6014820191506109b68284610983565b6020820191508190509392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610a336026836109c6565b9150610a3e826109d7565b604082019050919050565b60006020820190508181036000830152610a6281610a26565b9050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b610ab0610aab82610a69565b610a95565b82525050565b6000610ac28287610a9f565b600182019150610ad28286610962565b601482019150610ae28285610983565b602082019150610af28284610983565b60208201915081905095945050505050565b600081905092915050565b7fd694000000000000000000000000000000000000000000000000000000000000600082015250565b6000610b45600283610b04565b9150610b5082610b0f565b600282019050919050565b7f0100000000000000000000000000000000000000000000000000000000000000600082015250565b6000610b91600183610b04565b9150610b9c82610b5b565b600182019050919050565b6000610bb282610b38565b9150610bbe8284610962565b601482019150610bcd82610b84565b915081905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c0e6020836109c6565b9150610c1982610bd8565b602082019050919050565b60006020820190508181036000830152610c3d81610c01565b9050919050565b7f4445504c4f594d454e545f4641494c4544000000000000000000000000000000600082015250565b6000610c7a6011836109c6565b9150610c8582610c44565b602082019050919050565b60006020820190508181036000830152610ca981610c6d565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610ce4578082015181840152602081019050610cc9565b60008484015250505050565b6000610cfb82610cb0565b610d058185610cbb565b9350610d15818560208601610cc6565b80840191505092915050565b6000610d2d8284610cf0565b915081905092915050565b7f494e495449414c495a4154494f4e5f4641494c45440000000000000000000000600082015250565b6000610d6e6015836109c6565b9150610d7982610d38565b602082019050919050565b60006020820190508181036000830152610d9d81610d61565b905091905056fea264697066735822122096ae41806a35387971ea00b9818d3d48e95ec143af687fb2e73be5a20d03259564736f6c63430008120033",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c80634e6553041461004f578063715018a61461008c5780638da5cb5b146100a3578063cdcb760a146100ce578063f2fde38b146100fe575b600080fd5b34801561005b57600080fd5b50610076600480360381019061007191906106f8565b610127565b6040516100839190610747565b60405180910390f35b34801561009857600080fd5b506100a1610167565b005b3480156100af57600080fd5b506100b861017b565b6040516100c59190610747565b60405180910390f35b6100e860048036038101906100e391906108a8565b6101a4565b6040516100f59190610747565b60405180910390f35b34801561010a57600080fd5b5061012560048036038101906101209190610904565b610226565b005b600080838360405160200161013d92919061099a565b60405160208183030381529060405280519060200120905061015e816102a9565b91505092915050565b61016f61035a565b61017960006103d8565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006101ae61035a565b600033846040516020016101c392919061099a565b6040516020818303038152906040528051906020012090506101e681843461049c565b91507ff40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e826040516102179190610747565b60405180910390a15092915050565b61022e61035a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361029d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029490610a49565b60405180910390fd5b6102a6816103d8565b50565b60008061032160ff60f81b30856040518060400160405280601081526020017f67363d3d37363d34f03d5260086018f300000000000000000000000000000000815250805190602001206040516020016103069493929190610ab6565b6040516020818303038152906040528051906020012061063b565b9050610352816040516020016103379190610ba7565b6040516020818303038152906040528051906020012061063b565b915050919050565b610362610648565b73ffffffffffffffffffffffffffffffffffffffff1661038061017b565b73ffffffffffffffffffffffffffffffffffffffff16146103d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cd90610c24565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000806040518060400160405280601081526020017f67363d3d37363d34f03d5260086018f30000000000000000000000000000000081525090506000858251602084016000f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054b90610c90565b60405180910390fd5b61055d866102a9565b925060008173ffffffffffffffffffffffffffffffffffffffff1685876040516105879190610d21565b60006040518083038185875af1925050503d80600081146105c4576040519150601f19603f3d011682016040523d82523d6000602084013e6105c9565b606091505b505090508080156105f2575060008473ffffffffffffffffffffffffffffffffffffffff163b14155b610631576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062890610d84565b60405180910390fd5b5050509392505050565b60008160001c9050919050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061068f82610664565b9050919050565b61069f81610684565b81146106aa57600080fd5b50565b6000813590506106bc81610696565b92915050565b6000819050919050565b6106d5816106c2565b81146106e057600080fd5b50565b6000813590506106f2816106cc565b92915050565b6000806040838503121561070f5761070e61065a565b5b600061071d858286016106ad565b925050602061072e858286016106e3565b9150509250929050565b61074181610684565b82525050565b600060208201905061075c6000830184610738565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107b58261076c565b810181811067ffffffffffffffff821117156107d4576107d361077d565b5b80604052505050565b60006107e7610650565b90506107f382826107ac565b919050565b600067ffffffffffffffff8211156108135761081261077d565b5b61081c8261076c565b9050602081019050919050565b82818337600083830152505050565b600061084b610846846107f8565b6107dd565b90508281526020810184848401111561086757610866610767565b5b610872848285610829565b509392505050565b600082601f83011261088f5761088e610762565b5b813561089f848260208601610838565b91505092915050565b600080604083850312156108bf576108be61065a565b5b60006108cd858286016106e3565b925050602083013567ffffffffffffffff8111156108ee576108ed61065f565b5b6108fa8582860161087a565b9150509250929050565b60006020828403121561091a5761091961065a565b5b6000610928848285016106ad565b91505092915050565b60008160601b9050919050565b600061094982610931565b9050919050565b600061095b8261093e565b9050919050565b61097361096e82610684565b610950565b82525050565b6000819050919050565b61099461098f826106c2565b610979565b82525050565b60006109a68285610962565b6014820191506109b68284610983565b6020820191508190509392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610a336026836109c6565b9150610a3e826109d7565b604082019050919050565b60006020820190508181036000830152610a6281610a26565b9050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b610ab0610aab82610a69565b610a95565b82525050565b6000610ac28287610a9f565b600182019150610ad28286610962565b601482019150610ae28285610983565b602082019150610af28284610983565b60208201915081905095945050505050565b600081905092915050565b7fd694000000000000000000000000000000000000000000000000000000000000600082015250565b6000610b45600283610b04565b9150610b5082610b0f565b600282019050919050565b7f0100000000000000000000000000000000000000000000000000000000000000600082015250565b6000610b91600183610b04565b9150610b9c82610b5b565b600182019050919050565b6000610bb282610b38565b9150610bbe8284610962565b601482019150610bcd82610b84565b915081905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c0e6020836109c6565b9150610c1982610bd8565b602082019050919050565b60006020820190508181036000830152610c3d81610c01565b9050919050565b7f4445504c4f594d454e545f4641494c4544000000000000000000000000000000600082015250565b6000610c7a6011836109c6565b9150610c8582610c44565b602082019050919050565b60006020820190508181036000830152610ca981610c6d565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610ce4578082015181840152602081019050610cc9565b60008484015250505050565b6000610cfb82610cb0565b610d058185610cbb565b9350610d15818560208601610cc6565b80840191505092915050565b6000610d2d8284610cf0565b915081905092915050565b7f494e495449414c495a4154494f4e5f4641494c45440000000000000000000000600082015250565b6000610d6e6015836109c6565b9150610d7982610d38565b602082019050919050565b60006020820190508181036000830152610d9d81610d61565b905091905056fea264697066735822122096ae41806a35387971ea00b9818d3d48e95ec143af687fb2e73be5a20d03259564736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 680,
        "contract": "contracts/Create3Factory.sol:Create3Factory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}